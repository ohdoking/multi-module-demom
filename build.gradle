buildscript {
	ext {
		springBootVersion = '2.6.1'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

allprojects {
	apply plugin: 'java'
	apply plugin: 'eclipse'
	apply plugin: 'idea'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	group = 'com.ohdoking'
	version = '0.0.1-SNAPSHOT'
	sourceCompatibility = '11'

	task initSourceFolders {
		sourceSets*.java.srcDirs*.each {
			if( !it.exists() ) {
				it.mkdirs() }
		}

		sourceSets*.resources.srcDirs*.each {
			if( !it.exists() ) {
				it.mkdirs() }
		}
	}

	repositories {
		mavenCentral()
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.boot:spring-boot-devtools'
		implementation "org.springframework.boot:spring-boot-starter-cache"
		implementation "org.springframework.boot:spring-boot-starter-data-redis"
		compileOnly 'org.projectlombok:lombok'
		runtimeOnly 'org.postgresql:postgresql'
		runtimeOnly 'com.h2database:h2'
		annotationProcessor 'org.projectlombok:lombok'
		testImplementation('org.springframework.boot:spring-boot-starter-test') {
			exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
		}
	}

	test {
		useJUnitPlatform()
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation project(':demo-api')
	implementation project(':demo-common')
	implementation project(':demo-web')
}